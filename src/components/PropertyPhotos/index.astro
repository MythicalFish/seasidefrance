---
import { Picture } from 'astro:assets';
import type { ImageMetadata } from 'astro';
import type { PropertyPage } from '@data/properties/types';
import PropertyPhotoCarousel from './PhotoCarousel.astro';

interface Props {
  property: PropertyPage;
  layout?: 'single' | 'gallery';
  class?: string;
}

const { property, layout = 'single', class: className } = Astro.props;
const { lodgify } = property;
const images = import.meta.glob<{ default: ImageMetadata }>(
  '/src/images/photos/**/*.{jpg,jpeg,png}',
  {
    eager: true,
  }
);

const getMainImage = () => {
  if (!lodgify.imageUrl) return null;
  const filename = lodgify.imageUrl.split('/').pop()?.split('?')[0];
  const imagePath = Object.keys(images).find(
    (path) => path.includes(`/photos/${property.id}/`) && path.includes(filename || '')
  );
  return imagePath ? images[imagePath].default : null;
};

const mainPhoto = getMainImage();
---

<div class={className}>
  {
    layout === 'single' && !!mainPhoto ? (
      <Picture src={mainPhoto} alt="" width={1200} height={800} class="photo" />
    ) : (
      <PropertyPhotoCarousel property={property} showFirstPhoto={layout === 'gallery'} />
    )
  }
</div>

<style>
  .property-gallery {
    width: 100%;
  }

  .gallery-title {
    font-size: 1.5rem;
    margin-bottom: 1rem;
  }

  .gallery-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
    gap: 0.5rem;
  }

  .gallery-item {
    overflow: hidden;
    border-radius: 0.5rem;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease;
  }

  .gallery-item:hover {
    transform: translateY(-5px);
  }

  .gallery-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    aspect-ratio: 4/3;
    transition: transform 0.3s ease;
  }

  .gallery-item:hover .gallery-image {
    transform: scale(1.05);
  }

  .no-images {
    padding: 2rem;
    text-align: center;
    background-color: #f9f9f9;
    border-radius: 0.5rem;
  }

  @media (max-width: 768px) {
    .gallery-grid {
      grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    }
  }

  @media (max-width: 480px) {
    .gallery-grid {
      grid-template-columns: 1fr;
    }
  }
</style>
