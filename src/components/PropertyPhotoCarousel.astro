---
import { Picture } from 'astro:assets';
import type { ImageMetadata } from 'astro';
import type { PropertyPage } from 'src/data/properties/types';

interface Props {
  property: PropertyPage;
  showFirstPhoto?: boolean;
}

const { property, showFirstPhoto = true } = Astro.props;
const imageInfo = property.roomInfo.images;
const images = import.meta.glob<{ default: ImageMetadata }>('/src/photos/**/*.{jpg,jpeg,png}', {
  eager: true,
});

let photos = Object.keys(images)
  .filter((imagePath) => imagePath.includes(`/photos/${property.id}/`))
  .map((filePath) => {
    const fileName = filePath.split('/').pop() || '';
    const fileInfo = imageInfo.find((info: any) => info.url.includes(fileName));
    const description = fileInfo?.text || '';
    return {
      filePath,
      fileName,
      description,
      image: images[filePath].default,
    };
  })
  .sort((a, b) => {
    return a.description.localeCompare(b.description);
  });

const firstPhoto = showFirstPhoto ? photos[0] : null;
if (showFirstPhoto) {
  photos = photos.slice(1);
}

const carouselId = `carousel-${property.id}`;
---

<div class="property-photo-carousel">
  {firstPhoto && (
    <div class="main-photo mb-4">
      <Picture 
        src={firstPhoto.image} 
        alt={firstPhoto.description || ''} 
        width={1200} 
        height={800} 
        class="w-full h-auto object-cover rounded-lg" 
      />
    </div>
  )}
  
  {photos.length > 0 && (
    <div class={`swiper ${carouselId}`}>
      <div class="swiper-wrapper">
        {photos.slice(0, 8).map((photo) => (
          <div class="swiper-slide">
            <Picture
              src={photo.image}
              alt={photo.description || ''}
              width={600}
              height={400}
              class="w-full h-auto object-cover rounded-lg"
            />
          </div>
        ))}
      </div>
      
      <!-- Navigation buttons -->
      <div class="swiper-button-next"></div>
      <div class="swiper-button-prev"></div>
      
      <!-- Pagination -->
      <div class="swiper-pagination"></div>
    </div>
  )}
</div>

<style>
  .property-photo-carousel {
    width: 100%;
  }

  .main-photo img {
    width: 100%;
    height: auto;
    object-fit: cover;
  }

  .swiper {
    width: 100%;
    height: 300px;
  }

  .swiper-slide {
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .swiper-slide img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .swiper-button-next,
  .swiper-button-prev {
    color: #fff;
    background: rgba(0, 0, 0, 0.5);
    border-radius: 50%;
    width: 44px;
    height: 44px;
  }

  .swiper-button-next:after,
  .swiper-button-prev:after {
    font-size: 18px;
  }

  .swiper-pagination-bullet {
    background: #fff;
  }

  .swiper-pagination-bullet-active {
    background: #007aff;
  }

  @media (max-width: 768px) {
    .swiper {
      height: 250px;
    }
  }
</style>

<script>
  import Swiper from 'swiper';
  import { Navigation, Pagination, Autoplay, Mousewheel } from 'swiper/modules';
  import 'swiper/css';
  import 'swiper/css/navigation';
  import 'swiper/css/pagination';

  // Initialize all carousels on the page
  document.addEventListener('DOMContentLoaded', () => {
    const carousels = document.querySelectorAll('.swiper');
    
    carousels.forEach((carousel) => {
      new Swiper(carousel as HTMLElement, {
        modules: [Navigation, Pagination, Autoplay, Mousewheel],
        slidesPerView: 1,
        spaceBetween: 10,
        loop: true,
        autoplay: {
          delay: 5000,
          disableOnInteraction: false,
        },
        mousewheel: {
          enabled: true,
          forceToAxis: true,
          sensitivity: 1,
          releaseOnEdges: true,
        },
        pagination: {
          el: '.swiper-pagination',
          clickable: true,
        },
        navigation: {
          nextEl: '.swiper-button-next',
          prevEl: '.swiper-button-prev',
        },
        breakpoints: {
          640: {
            slidesPerView: 2,
            spaceBetween: 20,
          },
          768: {
            slidesPerView: 3,
            spaceBetween: 30,
          },
          1024: {
            slidesPerView: 4,
            spaceBetween: 40,
          },
        },
      });
    });
  });
</script> 