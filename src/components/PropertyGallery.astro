---
import { Image } from 'astro:assets';
import type { ImageMetadata } from 'astro';

interface Props {
  id: string | number;
  title?: string;
}

const { id, title } = Astro.props;

// Use import.meta.glob to import all images
const images = import.meta.glob<{ default: ImageMetadata }>('/src/photos/**/*.{jpg,jpeg,png}');

// Get all images for this property
const propertyImages = Object.keys(images)
  .filter((imagePath) => imagePath.includes(`/photos/${id}/`))
  .sort();
---

<div class="property-gallery">
  {title && <h2 class="gallery-title">{title}</h2>}

  {
    propertyImages.length === 0 ? (
      <p class="no-images">No images available for this property.</p>
    ) : (
      <div class="gallery-grid">
        {propertyImages.map((imagePath) => {
          const fileName = imagePath.split('/').pop() || '';
          return (
            <div class="gallery-item">
              <Image
                src={images[imagePath]()}
                alt={`Property ${id} - ${fileName}`}
                width={800}
                height={600}
                class="gallery-image"
              />
            </div>
          );
        })}
      </div>
    )
  }
</div>

<style>
  .property-gallery {
    width: 100%;
    margin: 2rem 0;
  }

  .gallery-title {
    font-size: 1.5rem;
    margin-bottom: 1rem;
  }

  .gallery-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 1rem;
  }

  .gallery-item {
    overflow: hidden;
    border-radius: 0.5rem;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease;
  }

  .gallery-item:hover {
    transform: translateY(-5px);
  }

  .gallery-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    aspect-ratio: 4/3;
    transition: transform 0.3s ease;
  }

  .gallery-item:hover .gallery-image {
    transform: scale(1.05);
  }

  .no-images {
    padding: 2rem;
    text-align: center;
    background-color: #f9f9f9;
    border-radius: 0.5rem;
  }

  @media (max-width: 768px) {
    .gallery-grid {
      grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    }
  }

  @media (max-width: 480px) {
    .gallery-grid {
      grid-template-columns: 1fr;
    }
  }
</style>
