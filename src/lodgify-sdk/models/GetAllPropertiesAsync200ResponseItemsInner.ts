/* tslint:disable */
/* eslint-disable */
/**
 * Lodgify Public API v2
 * API documentation for Lodgify Public API v2
 *
 * The version of the OpenAPI document: v2
 * Contact: development@lodgify.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { GetAllPropertiesAsync200ResponseItemsInnerInOut } from './GetAllPropertiesAsync200ResponseItemsInnerInOut';
import {
    GetAllPropertiesAsync200ResponseItemsInnerInOutFromJSON,
    GetAllPropertiesAsync200ResponseItemsInnerInOutFromJSONTyped,
    GetAllPropertiesAsync200ResponseItemsInnerInOutToJSON,
    GetAllPropertiesAsync200ResponseItemsInnerInOutToJSONTyped,
} from './GetAllPropertiesAsync200ResponseItemsInnerInOut';
import type { GetAllPropertiesAsync200ResponseItemsInnerContact } from './GetAllPropertiesAsync200ResponseItemsInnerContact';
import {
    GetAllPropertiesAsync200ResponseItemsInnerContactFromJSON,
    GetAllPropertiesAsync200ResponseItemsInnerContactFromJSONTyped,
    GetAllPropertiesAsync200ResponseItemsInnerContactToJSON,
    GetAllPropertiesAsync200ResponseItemsInnerContactToJSONTyped,
} from './GetAllPropertiesAsync200ResponseItemsInnerContact';
import type { GetAllPropertiesAsync200ResponseItemsInnerRoomsInner } from './GetAllPropertiesAsync200ResponseItemsInnerRoomsInner';
import {
    GetAllPropertiesAsync200ResponseItemsInnerRoomsInnerFromJSON,
    GetAllPropertiesAsync200ResponseItemsInnerRoomsInnerFromJSONTyped,
    GetAllPropertiesAsync200ResponseItemsInnerRoomsInnerToJSON,
    GetAllPropertiesAsync200ResponseItemsInnerRoomsInnerToJSONTyped,
} from './GetAllPropertiesAsync200ResponseItemsInnerRoomsInner';

/**
 * Object that retuns information for a property
 * @export
 * @interface GetAllPropertiesAsync200ResponseItemsInner
 */
export interface GetAllPropertiesAsync200ResponseItemsInner {
    /**
     * property identifier
     * @type {number}
     * @memberof GetAllPropertiesAsync200ResponseItemsInner
     */
    id?: number;
    /**
     * Name of the property
     * @type {string}
     * @memberof GetAllPropertiesAsync200ResponseItemsInner
     */
    name?: string | null;
    /**
     * Internal name of property
     * @type {string}
     * @memberof GetAllPropertiesAsync200ResponseItemsInner
     */
    internalName?: string | null;
    /**
     * Description of the property
     * @type {string}
     * @memberof GetAllPropertiesAsync200ResponseItemsInner
     */
    description?: string | null;
    /**
     * Latitude coordinate of the house
     * @type {number}
     * @memberof GetAllPropertiesAsync200ResponseItemsInner
     */
    latitude?: number;
    /**
     * Longitude coordinate of the house
     * @type {number}
     * @memberof GetAllPropertiesAsync200ResponseItemsInner
     */
    longitude?: number;
    /**
     * Address of the property
     * @type {string}
     * @memberof GetAllPropertiesAsync200ResponseItemsInner
     */
    address?: string | null;
    /**
     * Owner requested to hide address from public
     * @type {boolean}
     * @memberof GetAllPropertiesAsync200ResponseItemsInner
     */
    hideAddress?: boolean;
    /**
     * Zip code for the property
     * @type {string}
     * @memberof GetAllPropertiesAsync200ResponseItemsInner
     */
    zip?: string | null;
    /**
     * City name where the property is located
     * @type {string}
     * @memberof GetAllPropertiesAsync200ResponseItemsInner
     */
    city?: string | null;
    /**
     * Region name where the property is located
     * @type {string}
     * @memberof GetAllPropertiesAsync200ResponseItemsInner
     */
    state?: string | null;
    /**
     * Two Letters Country Code where the property is located
     * @type {string}
     * @memberof GetAllPropertiesAsync200ResponseItemsInner
     */
    countryCode?: string | null;
    /**
     * Country name where the property is located
     * @type {string}
     * @memberof GetAllPropertiesAsync200ResponseItemsInner
     */
    country?: string | null;
    /**
     * Image Url
     * @type {string}
     * @memberof GetAllPropertiesAsync200ResponseItemsInner
     */
    imageUrl?: string | null;
    /**
     * Boolean indicating if the property has available addons
     * @type {boolean}
     * @memberof GetAllPropertiesAsync200ResponseItemsInner
     */
    hasAddons?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof GetAllPropertiesAsync200ResponseItemsInner
     */
    hasAgreement?: boolean;
    /**
     * 
     * @type {string}
     * @memberof GetAllPropertiesAsync200ResponseItemsInner
     */
    agreementText?: string | null;
    /**
     * 
     * @type {string}
     * @memberof GetAllPropertiesAsync200ResponseItemsInner
     */
    agreementUrl?: string | null;
    /**
     * 
     * @type {GetAllPropertiesAsync200ResponseItemsInnerContact}
     * @memberof GetAllPropertiesAsync200ResponseItemsInner
     */
    contact?: GetAllPropertiesAsync200ResponseItemsInnerContact;
    /**
     * 
     * @type {number}
     * @memberof GetAllPropertiesAsync200ResponseItemsInner
     */
    rating?: number;
    /**
     * Price unit in days. This field indicates the number of days of stay the MinPrice and MaxPrice are
     * So if we have a 30 PriceUnitInDays, it means the MinPrice and MaxPrice are Monthly prices
     * If multiple prices per diferent periods are defined it will return daily prices
     * @type {number}
     * @memberof GetAllPropertiesAsync200ResponseItemsInner
     */
    priceUnitInDays?: number;
    /**
     * 
     * @type {number}
     * @memberof GetAllPropertiesAsync200ResponseItemsInner
     */
    minPrice?: number;
    /**
     * 
     * @type {number}
     * @memberof GetAllPropertiesAsync200ResponseItemsInner
     */
    originalMinPrice?: number;
    /**
     * 
     * @type {number}
     * @memberof GetAllPropertiesAsync200ResponseItemsInner
     */
    maxPrice?: number;
    /**
     * 
     * @type {number}
     * @memberof GetAllPropertiesAsync200ResponseItemsInner
     */
    originalMaxPrice?: number;
    /**
     * 
     * @type {Array<GetAllPropertiesAsync200ResponseItemsInnerRoomsInner>}
     * @memberof GetAllPropertiesAsync200ResponseItemsInner
     */
    rooms?: Array<GetAllPropertiesAsync200ResponseItemsInnerRoomsInner> | null;
    /**
     * 
     * @type {Date}
     * @memberof GetAllPropertiesAsync200ResponseItemsInner
     */
    inOutMaxDate?: Date;
    /**
     * 
     * @type {GetAllPropertiesAsync200ResponseItemsInnerInOut}
     * @memberof GetAllPropertiesAsync200ResponseItemsInner
     */
    inOut?: GetAllPropertiesAsync200ResponseItemsInnerInOut;
    /**
     * 
     * @type {string}
     * @memberof GetAllPropertiesAsync200ResponseItemsInner
     */
    currencyCode?: string | null;
    /**
     * DateTime of creation
     * @type {Date}
     * @memberof GetAllPropertiesAsync200ResponseItemsInner
     */
    createdAt?: Date;
    /**
     * Last update datetime
     * @type {Date}
     * @memberof GetAllPropertiesAsync200ResponseItemsInner
     */
    updatedAt?: Date;
    /**
     * Boolean indicating ig the property is active or not (meaning if is linked to a valid website)
     * @type {boolean}
     * @memberof GetAllPropertiesAsync200ResponseItemsInner
     */
    isActive?: boolean;
    /**
     * Subscription plans
     * @type {Array<string>}
     * @memberof GetAllPropertiesAsync200ResponseItemsInner
     */
    subscriptionPlans?: Array<string> | null;
}

/**
 * Check if a given object implements the GetAllPropertiesAsync200ResponseItemsInner interface.
 */
export function instanceOfGetAllPropertiesAsync200ResponseItemsInner(value: object): value is GetAllPropertiesAsync200ResponseItemsInner {
    return true;
}

export function GetAllPropertiesAsync200ResponseItemsInnerFromJSON(json: any): GetAllPropertiesAsync200ResponseItemsInner {
    return GetAllPropertiesAsync200ResponseItemsInnerFromJSONTyped(json, false);
}

export function GetAllPropertiesAsync200ResponseItemsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetAllPropertiesAsync200ResponseItemsInner {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'internalName': json['internal_name'] == null ? undefined : json['internal_name'],
        'description': json['description'] == null ? undefined : json['description'],
        'latitude': json['latitude'] == null ? undefined : json['latitude'],
        'longitude': json['longitude'] == null ? undefined : json['longitude'],
        'address': json['address'] == null ? undefined : json['address'],
        'hideAddress': json['hide_address'] == null ? undefined : json['hide_address'],
        'zip': json['zip'] == null ? undefined : json['zip'],
        'city': json['city'] == null ? undefined : json['city'],
        'state': json['state'] == null ? undefined : json['state'],
        'countryCode': json['country_code'] == null ? undefined : json['country_code'],
        'country': json['country'] == null ? undefined : json['country'],
        'imageUrl': json['image_url'] == null ? undefined : json['image_url'],
        'hasAddons': json['has_addons'] == null ? undefined : json['has_addons'],
        'hasAgreement': json['has_agreement'] == null ? undefined : json['has_agreement'],
        'agreementText': json['agreement_text'] == null ? undefined : json['agreement_text'],
        'agreementUrl': json['agreement_url'] == null ? undefined : json['agreement_url'],
        'contact': json['contact'] == null ? undefined : GetAllPropertiesAsync200ResponseItemsInnerContactFromJSON(json['contact']),
        'rating': json['rating'] == null ? undefined : json['rating'],
        'priceUnitInDays': json['price_unit_in_days'] == null ? undefined : json['price_unit_in_days'],
        'minPrice': json['min_price'] == null ? undefined : json['min_price'],
        'originalMinPrice': json['original_min_price'] == null ? undefined : json['original_min_price'],
        'maxPrice': json['max_price'] == null ? undefined : json['max_price'],
        'originalMaxPrice': json['original_max_price'] == null ? undefined : json['original_max_price'],
        'rooms': json['rooms'] == null ? undefined : ((json['rooms'] as Array<any>).map(GetAllPropertiesAsync200ResponseItemsInnerRoomsInnerFromJSON)),
        'inOutMaxDate': json['in_out_max_date'] == null ? undefined : (new Date(json['in_out_max_date'])),
        'inOut': json['in_out'] == null ? undefined : GetAllPropertiesAsync200ResponseItemsInnerInOutFromJSON(json['in_out']),
        'currencyCode': json['currency_code'] == null ? undefined : json['currency_code'],
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'updatedAt': json['updated_at'] == null ? undefined : (new Date(json['updated_at'])),
        'isActive': json['is_active'] == null ? undefined : json['is_active'],
        'subscriptionPlans': json['subscription_plans'] == null ? undefined : json['subscription_plans'],
    };
}

export function GetAllPropertiesAsync200ResponseItemsInnerToJSON(json: any): GetAllPropertiesAsync200ResponseItemsInner {
    return GetAllPropertiesAsync200ResponseItemsInnerToJSONTyped(json, false);
}

export function GetAllPropertiesAsync200ResponseItemsInnerToJSONTyped(value?: GetAllPropertiesAsync200ResponseItemsInner | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'internal_name': value['internalName'],
        'description': value['description'],
        'latitude': value['latitude'],
        'longitude': value['longitude'],
        'address': value['address'],
        'hide_address': value['hideAddress'],
        'zip': value['zip'],
        'city': value['city'],
        'state': value['state'],
        'country_code': value['countryCode'],
        'country': value['country'],
        'image_url': value['imageUrl'],
        'has_addons': value['hasAddons'],
        'has_agreement': value['hasAgreement'],
        'agreement_text': value['agreementText'],
        'agreement_url': value['agreementUrl'],
        'contact': GetAllPropertiesAsync200ResponseItemsInnerContactToJSON(value['contact']),
        'rating': value['rating'],
        'price_unit_in_days': value['priceUnitInDays'],
        'min_price': value['minPrice'],
        'original_min_price': value['originalMinPrice'],
        'max_price': value['maxPrice'],
        'original_max_price': value['originalMaxPrice'],
        'rooms': value['rooms'] == null ? undefined : ((value['rooms'] as Array<any>).map(GetAllPropertiesAsync200ResponseItemsInnerRoomsInnerToJSON)),
        'in_out_max_date': value['inOutMaxDate'] == null ? undefined : ((value['inOutMaxDate']).toISOString()),
        'in_out': GetAllPropertiesAsync200ResponseItemsInnerInOutToJSON(value['inOut']),
        'currency_code': value['currencyCode'],
        'created_at': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'updated_at': value['updatedAt'] == null ? undefined : ((value['updatedAt']).toISOString()),
        'is_active': value['isActive'],
        'subscription_plans': value['subscriptionPlans'],
    };
}

