/* tslint:disable */
/* eslint-disable */
/**
 * Lodgify Public API v2
 * API documentation for Lodgify Public API v2
 *
 * The version of the OpenAPI document: v2
 * Contact: development@lodgify.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface LodgifyApiPublicInfrastructureModelsError
 */
export interface LodgifyApiPublicInfrastructureModelsError {
    /**
     * 
     * @type {string}
     * @memberof LodgifyApiPublicInfrastructureModelsError
     */
    message?: string | null;
    /**
     * 
     * @type {string}
     * @memberof LodgifyApiPublicInfrastructureModelsError
     */
    code?: LodgifyApiPublicInfrastructureModelsErrorCodeEnum;
    /**
     * 
     * @type {string}
     * @memberof LodgifyApiPublicInfrastructureModelsError
     */
    correlationId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof LodgifyApiPublicInfrastructureModelsError
     */
    eventId?: string | null;
}


/**
 * @export
 */
export const LodgifyApiPublicInfrastructureModelsErrorCodeEnum = {
    Unknown: 'Unknown',
    NoRateDefined: 'NoRateDefined',
    MinStayRequired: 'MinStayRequired',
    BookingStatusUnknown: 'BookingStatusUnknown',
    BookingMessageTypeNotAllowed: 'BookingMessageTypeNotAllowed',
    BookingNoRooms: 'BookingNoRooms',
    BookingCannotChangeStatus: 'BookingCannotChangeStatus',
    EnquiryAlreadyUpgraded: 'EnquiryAlreadyUpgraded',
    BookingPaymentNotValid: 'BookingPaymentNotValid',
    ArrivalNotValid: 'ArrivalNotValid',
    DepartureNotValid: 'DepartureNotValid',
    PropertyNotAvailable: 'PropertyNotAvailable',
    MaxStayExceeded: 'MaxStayExceeded',
    CaptchaInvalid: 'CaptchaInvalid',
    StripeError: 'StripeError',
    ValidationError: 'ValidationError',
    PaymentError: 'PaymentError',
    ArgumentError: 'ArgumentError',
    NotFound: 'NotFound',
    NotImplemented: 'NotImplemented',
    NotAuthorized: 'NotAuthorized'
} as const;
export type LodgifyApiPublicInfrastructureModelsErrorCodeEnum = typeof LodgifyApiPublicInfrastructureModelsErrorCodeEnum[keyof typeof LodgifyApiPublicInfrastructureModelsErrorCodeEnum];


/**
 * Check if a given object implements the LodgifyApiPublicInfrastructureModelsError interface.
 */
export function instanceOfLodgifyApiPublicInfrastructureModelsError(value: object): value is LodgifyApiPublicInfrastructureModelsError {
    return true;
}

export function LodgifyApiPublicInfrastructureModelsErrorFromJSON(json: any): LodgifyApiPublicInfrastructureModelsError {
    return LodgifyApiPublicInfrastructureModelsErrorFromJSONTyped(json, false);
}

export function LodgifyApiPublicInfrastructureModelsErrorFromJSONTyped(json: any, ignoreDiscriminator: boolean): LodgifyApiPublicInfrastructureModelsError {
    if (json == null) {
        return json;
    }
    return {
        
        'message': json['message'] == null ? undefined : json['message'],
        'code': json['code'] == null ? undefined : json['code'],
        'correlationId': json['correlation_id'] == null ? undefined : json['correlation_id'],
        'eventId': json['event_id'] == null ? undefined : json['event_id'],
    };
}

export function LodgifyApiPublicInfrastructureModelsErrorToJSON(json: any): LodgifyApiPublicInfrastructureModelsError {
    return LodgifyApiPublicInfrastructureModelsErrorToJSONTyped(json, false);
}

export function LodgifyApiPublicInfrastructureModelsErrorToJSONTyped(value?: LodgifyApiPublicInfrastructureModelsError | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'message': value['message'],
        'code': value['code'],
        'correlation_id': value['correlationId'],
        'event_id': value['eventId'],
    };
}

