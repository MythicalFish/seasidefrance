/* tslint:disable */
/* eslint-disable */
/**
 * Lodgify Public API v2
 * API documentation for Lodgify Public API v2
 *
 * The version of the OpenAPI document: v2
 * Contact: development@lodgify.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * 
 * @export
 */
export const LodgifyApiTypesApiErrorCode = {
    Unknown: 'Unknown',
    NoRateDefined: 'NoRateDefined',
    MinStayRequired: 'MinStayRequired',
    BookingStatusUnknown: 'BookingStatusUnknown',
    BookingMessageTypeNotAllowed: 'BookingMessageTypeNotAllowed',
    BookingNoRooms: 'BookingNoRooms',
    BookingCannotChangeStatus: 'BookingCannotChangeStatus',
    EnquiryAlreadyUpgraded: 'EnquiryAlreadyUpgraded',
    BookingPaymentNotValid: 'BookingPaymentNotValid',
    ArrivalNotValid: 'ArrivalNotValid',
    DepartureNotValid: 'DepartureNotValid',
    PropertyNotAvailable: 'PropertyNotAvailable',
    CaptchaInvalid: 'CaptchaInvalid',
    StripeError: 'StripeError',
    ValidationError: 'ValidationError',
    PaymentError: 'PaymentError',
    ArgumentError: 'ArgumentError',
    NotFound: 'NotFound',
    NotImplemented: 'NotImplemented',
    NotAuthorized: 'NotAuthorized'
} as const;
export type LodgifyApiTypesApiErrorCode = typeof LodgifyApiTypesApiErrorCode[keyof typeof LodgifyApiTypesApiErrorCode];


export function instanceOfLodgifyApiTypesApiErrorCode(value: any): boolean {
    for (const key in LodgifyApiTypesApiErrorCode) {
        if (Object.prototype.hasOwnProperty.call(LodgifyApiTypesApiErrorCode, key)) {
            if (LodgifyApiTypesApiErrorCode[key as keyof typeof LodgifyApiTypesApiErrorCode] === value) {
                return true;
            }
        }
    }
    return false;
}

export function LodgifyApiTypesApiErrorCodeFromJSON(json: any): LodgifyApiTypesApiErrorCode {
    return LodgifyApiTypesApiErrorCodeFromJSONTyped(json, false);
}

export function LodgifyApiTypesApiErrorCodeFromJSONTyped(json: any, ignoreDiscriminator: boolean): LodgifyApiTypesApiErrorCode {
    return json as LodgifyApiTypesApiErrorCode;
}

export function LodgifyApiTypesApiErrorCodeToJSON(value?: LodgifyApiTypesApiErrorCode | null): any {
    return value as any;
}

export function LodgifyApiTypesApiErrorCodeToJSONTyped(value: any, ignoreDiscriminator: boolean): LodgifyApiTypesApiErrorCode {
    return value as LodgifyApiTypesApiErrorCode;
}

